{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://oasis-open.org/openc2/oc2slpf/v1.0.1/rsp",
  "title": "SLPF v1.0.1 - Response",
  "description": "OpenC2 LS version 1.0 + errata + SLPF",
  "$ref": "#/definitions/OpenC2-Response",
  "definitions": {
    "OpenC2-Response": {
      "title": "OpenC2 Response",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/Status-Code",
          "description": "An integer status code"
        },
        "status_text": {
          "type": "string",
          "description": "A free-form human-readable description of the Response status"
        },
        "results": {
          "$ref": "#/definitions/Results",
          "description": "Map of key:value pairs that contain additional results based on the invoking Command."
        }
      }
    },
    "Results": {
      "title": "Results",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "properties": {
        "versions": {
          "type": "array",
          "description": "List of OpenC2 language versions supported by this Actuator",
          "uniqueItems": true,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Version",
            "description": "List of OpenC2 language versions supported by this Actuator"
          }
        },
        "profiles": {
          "type": "array",
          "description": "List of profiles supported by this Actuator",
          "items": {
            "$ref": "#/definitions/Nsid"
          }
        },
        "pairs": {
          "$ref": "#/definitions/Action-Targets",
          "description": "List of targets applicable to each supported Action"
        },
        "rate_limit": {
          "type": "number",
          "description": "Maximum number of requests per minute supported by design or policy"
        },
        "slpf": {
          "$ref": "#/definitions/P-Results",
          "description": "Result properties defined in the Stateless Packet Filtering Profile"
        }
      }
    },
    "Action-Targets": {
      "title": "Action Targets",
      "type": "object",
      "description": "Map of each action supported by this actuator to the list of targets applicable to that action.",
      "additionalProperties": false,
      "minProperties": 1,
      "properties": {
        "query": {
          "type": "array",
          "description": "",
          "uniqueItems": true,
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/Tgt-query",
            "description": ""
          }
        },
        "deny": {
          "type": "array",
          "description": "",
          "uniqueItems": true,
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/Tgt-allow-deny",
            "description": ""
          }
        },
        "allow": {
          "type": "array",
          "description": "",
          "uniqueItems": true,
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/Tgt-allow-deny",
            "description": ""
          }
        },
        "update": {
          "type": "array",
          "description": "",
          "uniqueItems": true,
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/Tgt-update",
            "description": ""
          }
        },
        "delete": {
          "type": "array",
          "description": "",
          "uniqueItems": true,
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/Tgt-delete",
            "description": ""
          }
        }
      }
    },
    "Tgt-query": {
      "title": "Tgt query",
      "type": "string",
      "oneOf": [
        {
          "const": "features",
          "description": ""
        }
      ]
    },
    "Tgt-allow-deny": {
      "title": "Tgt allow deny",
      "type": "string",
      "oneOf": [
        {
          "const": "ipv4_net",
          "description": ""
        },
        {
          "const": "ipv6_net",
          "description": ""
        },
        {
          "const": "ipv4_connection",
          "description": ""
        },
        {
          "const": "ipv6_connection",
          "description": ""
        }
      ]
    },
    "Tgt-update": {
      "title": "Tgt update",
      "type": "string",
      "oneOf": [
        {
          "const": "file",
          "description": ""
        }
      ]
    },
    "Tgt-delete": {
      "title": "Tgt delete",
      "type": "string",
      "oneOf": [
        {
          "const": "slpf:rule_number",
          "description": ""
        }
      ]
    },
    "Status-Code": {
      "title": "Status Code",
      "type": "integer",
      "oneOf": [
        {
          "const": 102,
          "description": "Processing - an interim Response used to inform the Producer that the Consumer has accepted the Command but has not yet completed it."
        },
        {
          "const": 200,
          "description": "OK - the Command has succeeded."
        },
        {
          "const": 400,
          "description": "BadRequest - the Consumer cannot process the Command due to something that is perceived to be a Producer error (e.g., malformed Command syntax)."
        },
        {
          "const": 401,
          "description": "Unauthorized - the Command Message lacks valid authentication credentials for the target resource or authorization has been refused for the submitted credentials."
        },
        {
          "const": 403,
          "description": "Forbidden - the Consumer understood the Command but refuses to authorize it."
        },
        {
          "const": 404,
          "description": "NotFound - the Consumer has not found anything matching the Command."
        },
        {
          "const": 500,
          "description": "InternalError - the Consumer encountered an unexpected condition that prevented it from performing the Command."
        },
        {
          "const": 501,
          "description": "NotImplemented - the Consumer does not support the functionality required to perform the Command."
        },
        {
          "const": 503,
          "description": "ServiceUnavailable - the Consumer is currently unable to perform the Command due to a temporary overloading or maintenance of the Consumer."
        }
      ]
    },
    "Nsid": {
      "title": "Nsid",
      "type": "string",
      "description": "A short identifier that refers to a namespace.",
      "minLength": 1,
      "maxLength": 16
    },
    "Version": {
      "title": "Version",
      "type": "string",
      "description": "Major.Minor version number"
    },
    "Rule-ID": {
      "title": "Rule ID",
      "type": "integer",
      "description": "Access rule identifier"
    },
    "P-Results": {
      "title": "P Results",
      "type": "object",
      "description": "SLPF results",
      "additionalProperties": false,
      "properties": {
        "rule_number": {
          "$ref": "#/definitions/Rule-ID",
          "description": "Rule identifier returned from allow or deny Command."
        }
      }
    }
  }
}
